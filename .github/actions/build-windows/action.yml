name: build-windows
description: "A build action to Windows based plugin"
inputs:
  GOARCH:
    required: true
    description:  "Architecure for which binary should be build"
  RELEASE:
    required: false
    description:  "Optional - release url in order to which artifact should be uploaded"
  TOKEN:
    required: false
    description:  "Optional - token to be used on repo actions"

runs:
  using: composite
  steps:
    - name: "Checkout repository"
      uses: actions/checkout@v4
    - name: "Checkout wimlib repository"
      uses: actions/checkout@v4
      with:
        repository: ebiggers/wimlib
        path: './wimlib'
        submodules: true
    - name: "Setup MYSYS2 for wimlib build"
      uses: msys2/setup-msys2@v2
    - name: "Configure MYSYS2"
      shell: powershell
      run: msys2 -c 'pacman -Syu --noconfir --needed base-devel mingw-w64-i686-toolchain mingw-w64-x86_64-toolchain'
    - name: "Build wimlib binaries for windows x64"
      shell: powershell
      run: msys2 -c './wimlib/tools/windows-build.sh --install-prerequisites'
    - name: "Copy required files to related locations"
      shell: powershell
      run: |
        New-Item -Type Directory -Path ./lib/devel
        gci -Recurse -Path ./wimlib -Include libwim.lib | cp -Destination ./lib/devel
        gci -Recurse -Path ./wimlib -Include wimlib.h | cp -Destination ./lib/devel
        New-Item -Type Directory -Path ./out
        gci -Recurse -Path ./wimlib -Include libwim-15.dll | cp -Destination ./out
    - name: "Setup Go runtime"
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    - name: "Build plugin binary"
      shell: powershell
      run: |
        $env:GOARCH = "${{ inputs.GOARCH }}"
        go get .
        go build -x -o ./out/packer-plugin-wim_windows_${{ inputs.GOARCH }}.exe .
    - name: "Upload the package"
      uses: actions/upload-artifact@v3
      with:
        name: packer-plugin-wim_windows_${{ inputs.GOARCH }}
        path: ./out/*
        retention-days: 30
    - if: "${{ github.event.inputs.RELEASE != '' }}"
      name: Create archive
      uses: thedoctor0/zip-release@0.7.1
      with:
        type: 'zip'
        direcctory: ./out/*
        filename: 'packer-plugin-wim_windows_${{ github.ref }}_${{ inputs.GOARCH }}'
    - if: "${{ github.event.inputs.RELEASE != '' }}"
      name: Release actions
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ inputs.TOKEN }}
      with:
        upload_url: ${{ inputs.RELEASE}}
        asset_name: packer-plugin-wim_windows_${{ github.ref }}_${{ inputs.GOARCH }}'
        asset_content_type: application/zip
